# AJAX(Asynchronous Javascript And XML)
  - HTML, CSS, Javascript를 활용해서 동적이면서 인터렉티브한 사용자 화면
       조작은 물론 서버와의 비동기 데이터 통신을 통해 응답성 좋은 데이터 처리를 
       가능하게 하는 웹 개발 기법.
    ※ 비동기 통신
    - 비동기 방식은 웹 페이지를 리로드하지 않고 데이터를 불러오는 방식을 말함.
            이 방식의 장점은 페이지 리로드의 경우 전체 리소스를 다시 불러와야 하는데
            이미지, 스크립트, 기타 코드등을 모두 재 요청할 경우 불필요한 리소스 낭비가
            발생하게 되지만, 비동기식 방식을 이용할 경우 필요한 부분만 불러와 사용할 수
            있으므로 매우 큰 장점이 있음.
            
# AJAX의 장점
  - 새로 고침을 통해 새로운 컨텐츠를 반영해야 하는 정적인 페이지가 아닌 동적인 웹
        페이지를 만들 수 있음.
  - 전체 페이지에서 실제로 바뀌어야 할 내용이 특정 부분에 해당한다면 이 영역의
        데이터만을 따로 서버에서 받아올 수 있으므로 경우에 따라 서버의 네트워크 부하를
        최대한으로 줄여 줄 수 있음.
  - 인터렉티브한 효과를 이용해 사용자에게 바뀐 부분을 부각시켜 줄 수 있음.
  
# AJAX에서 반드시 알고 있어야 하는 핵심 내용
  - XMLHttpRequest 객체
    * 모든 현대적인 웹 브라우저에서 XMLHttpRequest 객체를 지원함.
    * XMLHttpRequest 객체는 내부적으로 클라이언트와 서버간의 데이터 요청 및
            응답 처리를 담당함. 가장 먼저 생성해야 하는 객체임.
  - get 방식, post 방식
    * 서버에 보낼 데이터를 url에 포함시켜서 보낼지(get 방식), 아니면 요청
            페이지 몸체에 담아 보낼지(post 방식)와 관련된 부분임.
  - 동기식, 비동기식
    * 서버에 요청을 보내고 서버측 응답이 올 때 까지 다음 코드를 실행하지 않고 무작정
            기다릴 것인지(동기식), 아니면 다른 것을 처리하면서 서버측 응답이 왔다는 
            소식을 브라우저에 의해 이벤트로 받을 것인지(비동기식) 선택하는 부분임. 
      Ajax에서 A가 비동기를 의미하듯 여기서는 이 가운데 비동기식을 주로 사용을 함.
  - CSV, JSON, XML
    * 서버에서 클라이언트로 요청에 대한 응답을 보내는 방식을 설정.
    * 데이터를 하나로 묶어서 보낼 것인지(CSV, Comma Seperated Value),
            아니면 널리 사용하는 XML 형식으로 보낼 것인지, 또는 리터럴 방식의 자바
            스크립트 객체를 의미하는 JSON(JavaScript Object Nation) 방식으로
            보낼지를 설정. 상황에 따라 3가지 방식을 모두 사용할 때가 있으니 모두 알고 있는
            것이 좋음.





